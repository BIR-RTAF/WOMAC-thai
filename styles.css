Conversation opened. 3 messages. All messages read.

Skip to content
Using Gmail with screen readers
Enable desktop notifications for Gmail.
   OK  No thanks
17 of 49
index
Inbox

IR BAH <vir.bahos@gmail.com>
Attachments
May 18, 2025, 10:10 PM (2 days ago)
to me

 2 Attachments
  •  Scanned by Gmail

IR BAH <vir.bahos@gmail.com>
May 18, 2025, 10:11 PM (2 days ago)
to me


On Sun, 18 May 2568 BE at 22:10 IR BAH <vir.bahos@gmail.com> wrote:




function doPost(e) {
const sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
const data = JSON.parse(e.postData.contents);

sheet.appendRow([
new Date(),
data.fullName,
data.assessmentDate,
data.totalScore,
data.percent
]);

return ContentService.createTextOutput("Saved").setMimeType(ContentService.MimeType.TEXT);
}








document.getElementById('womacForm').addEventListener('submit', function (e) {
e.preventDefault();
const form = e.target;
const radioFields = form.querySelectorAll('input[type="radio"]:checked');

let totalScore = 0;
let maxScore = 0;

radioFields.forEach((radio) => {
totalScore += parseInt(radio.value);
maxScore += 4;
});

const percent = ((totalScore / maxScore) * 100).toFixed(2);
const fullName = document.getElementById('full-name').value;
const assessmentDate = document.getElementById('assessment-date').value;

document.getElementById('result').textContent =
`คุณ ${fullName} ได้คะแนนรวม: ${totalScore} / ${maxScore} (${percent}%)`;

// === ส่งไป Google Sheets ===
fetch("https://script.google.com/macros/s/PASTE_YOUR_SCRIPT_URL_HERE/exec", {
method: "POST",
body: JSON.stringify({
fullName,
assessmentDate,
totalScore,
percent
}),
headers: {
"Content-Type": "application/json"
}
})
.then(res => res.text())
.then(text => console.log("ส่งสำเร็จ:", text))
.catch(err => console.error("ส่งไม่สำเร็จ:", err));
});



https://script.google.com/macros/s/AKfycbxxxxxx/exec







IR BAH <vir.bahos@gmail.com>
May 18, 2025, 10:44 PM (2 days ago)
to me

https://script.google.com/macros/s/AKfycbwjUOj9Ii9Eg74-kZS9W7qAsV5zK_b_qCgqdKjQT8n5Tl8N6LbDawRMARYf3mvsT5mqlQ/exec

@import url('https://fonts.googleapis.com/css2?family=Open+Sans&display=swap');

* {
  box-sizing: border-box;
}

body {
  margin: 0;
  font-family: 'Open Sans', sans-serif;
  background: linear-gradient(135deg, #e0f7fa, #ffffff);
  color: #2c3e50;
  min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: flex-start;
  padding: 40px 15px;
}

main {
  background: #ffffffcc;
  border-radius: 12px;
  padding: 30px 40px;
  max-width: 900px;
  width: 100%;
  box-shadow: 0 12px 28px rgba(0, 0, 0, 0.1);
}

h1 {
  margin-top: 0;
  font-weight: 700;
  font-size: 1.8rem;
  text-align: center;
  color: #0d47a1;
  margin-bottom: 30px;
}

h2 {
  font-size: 1.1rem;
  color: #1565c0;
  border-bottom: 1px solid #90caf9;
  padding-bottom: 6px;
  margin-bottom: 20px;
  margin-top: 40px;
}

.question {
  margin-bottom: 30px;
}

.question p {
  font-weight: 600;
  color: #1a237e;
  margin-bottom: 10px;
}

.options {
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
}

.options label {
  background-color: white;
  color: #0d47a1;
  border: 2px solid #90caf9;
  border-radius: 6px;
  padding: 8px 14px;
  cursor: pointer;
  font-weight: 500;
  transition: background-color 0.2s, color 0.2s;
}

.options input[type="radio"] {
  display: none;
}

.options input[type="radio"]:checked + label,
.options label:has(input[type="radio"]:checked) {
  background-color: #1565c0;
  color: white;
  border-color: #1565c0;
}

button {
  margin-top: 30px;
  width: 100%;
  padding: 14px;
  border: none;
  border-radius: 8px;
  background-color: #0d47a1;
  color: white;
  font-size: 1.2rem;
  font-weight: 700;
  cursor: pointer;
  box-shadow: 0 6px 12px #90caf9aa;
  transition: background-color 0.3s ease;
}

button:hover {
  background-color: #1565c0;
}

#result {
  margin-top: 30px;
  background: #e3f2fd;
  border-left: 6px solid #2196f3;
  border-radius: 6px;
  padding: 18px 25px;
  font-size: 1.2rem;
  font-weight: 600;
  color: #0d47a1;
  text-align: center;
  user-select: none;
}
styles.css
Displaying index.html.
